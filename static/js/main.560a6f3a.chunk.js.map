{"version":3,"sources":["Example.js","App.js","index.js","logo.svg"],"names":["Example","useState","counter","setCounter","Map","status","setStatus","abortControllerRef","useAbortableEffect","signal","a","fetch","name","onClick","count","current","abort","disabled","App","height","src","logo","alt","href","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kTAMe,SAASA,IAAW,IAAD,EACFC,mBAAS,GADP,mBACzBC,EADyB,KAChBC,EADgB,OAEJF,mBAAS,IAAIG,KAFT,mBAEzBC,EAFyB,KAEjBC,EAFiB,KAI1BC,EAAqBC,aACzB,SAACC,GACC,sBAAC,sBAAAC,EAAA,6DACCJ,GAAU,SAACD,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BH,EAAU,gBADhD,kBAGSS,MAXP,4EAWkB,CAAEF,WAHtB,OAIGH,GAAU,SAACD,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BH,EAAU,YAJlD,mDAMkB,eAAX,KAAEU,KANT,iBAOKN,GAAU,SAACD,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BH,EAAU,eAPpD,2FAAD,KAcF,CAACA,IAGH,OACE,oCACE,sFACA,6BACA,6BACE,4BAAQW,QAAS,kBAAMV,GAAW,SAACW,GAAD,OAAWA,EAAQ,OAC9B,aAApBT,EAAOH,IAA2B,UACd,aAApBG,EAAOH,IAA2B,SAC3B,IAJZ,IAKI,IACF,4BACEW,QAAS,kBAAMN,EAAmBQ,QAAQC,SAC1CC,SAA8B,aAApBZ,EAAOH,IAFnB,gBAOF,6BACA,8CACgB,gCAASG,EAAOH,IAC7BG,EAAOH,EAAU,IAChB,oCACE,6BADF,0BAEyB,gCAASG,EAAOH,EAAU,O,oBC9C9C,SAASgB,IACtB,OACE,iCACE,gCACE,4BACE,yBAAKC,OAAO,OAAOC,IAAKC,IAAMC,IAAI,gBAEpC,2BACE,uBAAGC,KAAK,mDAAR,OACM,sDADN,qBAKJ,kBAACvB,EAAD,OCbNwB,IAASC,OAAO,kBAACP,EAAD,MAASQ,SAASC,eAAe,U,kBCNjDC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.560a6f3a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport useAbortableEffect from '@closeio/use-abortable-effect';\n\nconst URL = `//run.mocky.io/v3/fb2943b6-ef22-4037-b067-9b22e47f3326?mocky-delay=5000ms`;\n\nexport default function Example() {\n  const [counter, setCounter] = useState(0);\n  const [status, setStatus] = useState(new Map());\n\n  const abortControllerRef = useAbortableEffect(\n    (signal) => {\n      (async () => {\n        setStatus((status) => ({ ...status, [counter]: 'fetching' }));\n        try {\n          await fetch(URL, { signal });\n          setStatus((status) => ({ ...status, [counter]: 'done' }));\n        } catch (e) {\n          if (e.name === 'AbortError') {\n            setStatus((status) => ({ ...status, [counter]: 'aborted' }));\n          } else {\n            throw e;\n          }\n        }\n      })();\n    },\n    [counter],\n  );\n\n  return (\n    <>\n      <div>Fetch issues a request that responds after 5 seconds.</div>\n      <br />\n      <div>\n        <button onClick={() => setCounter((count) => count + 1)}>\n          {status[counter] === 'fetching' && 'refetch'}\n          {status[counter] !== 'fetching' && 'fetch'}\n        </button>{' '}\n        |{' '}\n        <button\n          onClick={() => abortControllerRef.current.abort()}\n          disabled={status[counter] !== 'fetching'}\n        >\n          Abort fetch\n        </button>\n      </div>\n      <br />\n      <div>\n        Fetch status: <strong>{status[counter]}</strong>\n        {status[counter - 1] && (\n          <>\n            <br />\n            Previous fetch status: <strong>{status[counter - 1]}</strong>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Example from './Example';\n\nimport logo from './logo.svg';\n\nexport default function App() {\n  return (\n    <section>\n      <header>\n        <h1>\n          <img height=\"50px\" src={logo} alt=\"Close logo\" />\n        </h1>\n        <p>\n          <a href=\"https://github.com/closeio/use-abortable-effect\">\n            See <code>use-abortable-effect</code> GitHub project\n          </a>\n        </p>\n      </header>\n      <Example />\n    </section>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo.d0a24d1a.svg\";"],"sourceRoot":""}